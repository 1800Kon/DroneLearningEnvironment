#branches:
#  only:
#  - master #what branch to build
#after_success:
 #create docker image from a container
#after_failure:
  #If failed we can send an email to the person which pushed an email saying the build failed.
  #What we have found, is that when testing the software, we test the unit testing no the script itself
  #This means that we need to make test for the different challenges. We can use either pytest or a different one.
  #We need to make sure we understand this and how to do it correctly. more unit testing :D

language: python
python:
  - "3.9"
services:
  - docker

cache: pip
install:
  - "pip install -r requirements.txt"
  - "pip install -e ."
  - "pip install flake8 "

script:
  - flake8 --ignore=E1, F403, F405, E501, E503, F811, W292, E302, F821, E231, E305

notifications:
  email:
    recipients:
      - pepe.loperena@student.nhlstenden.com
      - georgi.dimitrov@student.nhlstenden.com
    on_success: never # this should be changed as never or only on specific moments. for now it is left like this for testing purposes
    on_failure: always # default: always
after_success:
  - docker build -t pepeloperena/dockertest:testtag .
  - docker login -u pepeloperena -p Fuerte2019!
  - docker push pepeloperena/dockertest
